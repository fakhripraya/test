[{"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\index.js":"1","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\App.js":"2","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Page\\Home.js":"3","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\APIS\\MovieAPI.js":"4","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\promise.js":"5","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\Table.js":"6","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\Promise.js":"7","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Page\\style\\home-style.js":"8","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\Modal.js":"9","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\style\\table-style.js":"10"},{"size":270,"mtime":1611818782270,"results":"11","hashOfConfig":"12"},{"size":123,"mtime":1611834640422,"results":"13","hashOfConfig":"12"},{"size":6558,"mtime":1611896627682,"results":"14","hashOfConfig":"12"},{"size":179,"mtime":1611811709584,"results":"15","hashOfConfig":"12"},{"size":674,"mtime":1611812874222,"results":"16","hashOfConfig":"12"},{"size":7465,"mtime":1611895972382,"results":"17","hashOfConfig":"12"},{"size":686,"mtime":1611838023993,"results":"18","hashOfConfig":"12"},{"size":1460,"mtime":1611894025851,"results":"19","hashOfConfig":"12"},{"size":462,"mtime":1611838210016,"results":"20","hashOfConfig":"12"},{"size":3110,"mtime":1611893395561,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1va51jh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\index.js",[],["45","46"],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\App.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Page\\Home.js",["47","48","49","50","51","52"],"import 'date-fns'\r\nimport {\r\n    Title,\r\n    LikeInput,\r\n    InputTitle,\r\n    AutoContent,\r\n    SearchInput,\r\n    InputContent,\r\n    InputWrapper,\r\n    AutoContainer,\r\n    InputContainer,\r\n    MasterContainer,\r\n} from './style/home-style';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers'\r\nimport Table from '../Components/Table';\r\nimport { Movie } from '../APIS/MovieAPI';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nfunction Home() {\r\n\r\n    const [MovieDatas, setMovieDatas] = useState([])\r\n    const [autoDisplayTitle, setAutoDisplayTitle] = useState(false)\r\n    const [autoDisplayTitleRender, setAutoDisplayTitleRender] = useState([])\r\n    const [autoDisplayLike, setAutoDisplayLike] = useState(false)\r\n    const [autoDisplayLikeRender, setAutoDisplayLikeRender] = useState([])\r\n    const [queryTitle, setqueryTitle] = useState(\"\")\r\n    const [queryShowTime, setqueryShowTime] = useState(null)\r\n    const [queryLike, setqueryLike] = useState(null)\r\n    const [queryLikeToggle, setqueryLikeToggle] = useState(3)\r\n\r\n    useEffect(() => {\r\n\r\n        // triggers the http get request to fetch movie data from the given url\r\n        if (MovieDatas.length === 0) {\r\n            trackPromise(\r\n                Movie.get(\r\n                    '/api/v1/movies',\r\n                )\r\n                    .then(response => {\r\n                        if (response.status >= 200 && response.status < 300) {\r\n                            setMovieDatas(response.data)\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status !== 200) {\r\n                            // dispatch(popUpModalChange({ show: true, title: 'ERROR', message: error.response.data.message }));\r\n                        }\r\n                    })\r\n            );\r\n        }\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [queryTitle])\r\n\r\n    function handleSearchTitle(e) {\r\n\r\n        setqueryTitle(e.target.value);\r\n\r\n        if (e.target.value.length > 0) {\r\n\r\n            setAutoDisplayTitle(true);\r\n\r\n            let slices = []\r\n\r\n            MovieDatas.forEach((item, index) => {\r\n\r\n                // case sensitive\r\n                if (item.title.toUpperCase().includes(e.target.value.toUpperCase())) {\r\n                    let tempSlices = [...slices, item]\r\n                    slices = tempSlices\r\n                }\r\n\r\n            })\r\n\r\n            setAutoDisplayTitleRender(slices)\r\n        } else {\r\n            setAutoDisplayTitle(false);\r\n        }\r\n    }\r\n\r\n    function handleAutoTitle(item) {\r\n\r\n        setqueryTitle(item);\r\n        setAutoDisplayTitle(false);\r\n    }\r\n\r\n    function handleLike(e) {\r\n        setqueryLike(e.target.value);\r\n    }\r\n\r\n    // function handleLikeToggle() {\r\n\r\n    // }\r\n\r\n    if (MovieDatas.length !== 0) {\r\n        return (\r\n            <MasterContainer>\r\n                <Title>Movies</Title>\r\n                <InputWrapper>\r\n                    <InputContainer>\r\n                        <InputTitle>\r\n                            <span style={{ fontSize: '28px' }}>Search</span>\r\n                        </InputTitle>\r\n                        <InputContent>\r\n                            <SearchInput type=\"text\" onChange={handleSearchTitle} value={queryTitle} style={{ paddingLeft: '10px', fontSize: '36px' }} />\r\n                            {autoDisplayTitle && (\r\n                                <AutoContainer style={{ position: 'absolute', zIndex: 999, backgroundColor: 'rgba(54, 47, 75, 0.9)', textAlign: 'center' }}>\r\n                                    {autoDisplayTitleRender.map((item, index) => {\r\n                                        return (\r\n                                            <AutoContent onClick={() => { handleAutoTitle(item.title) }}>\r\n                                                <span style={{ color: '#ffffff', fontSize: '24px' }}>\r\n                                                    {item.title}\r\n                                                </span>\r\n                                            </AutoContent>\r\n                                        );\r\n                                    })}\r\n                                </AutoContainer>\r\n                            )}\r\n                        </InputContent>\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <InputTitle>\r\n                            <span style={{ fontSize: '28px' }}>Show Time</span>\r\n                        </InputTitle>\r\n                        <InputContent>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        style={{ width: '300px' }}\r\n                                        disableToolbar\r\n                                        variant='inline'\r\n                                        format='MM/dd/yyyy'\r\n                                        margin='normal'\r\n                                        id='date-picker'\r\n                                        onChange={setqueryShowTime}\r\n                                        value={queryShowTime}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </InputContent>\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <InputTitle>\r\n                            <span style={{ fontSize: '28px' }}>Like</span>\r\n                        </InputTitle>\r\n                        <InputContent>\r\n                            <LikeInput type=\"number\" onChange={handleLike} style={{ paddingLeft: '10px', fontSize: '36px' }} />\r\n                        </InputContent>\r\n                    </InputContainer>\r\n                </InputWrapper>\r\n                <Table>\r\n                    {{\r\n                        data: MovieDatas,\r\n                        title: queryTitle,\r\n                        like: queryLike,\r\n                        showTime: queryShowTime,\r\n                        likeToggle: queryLikeToggle,\r\n                    }}\r\n                </Table>\r\n            </MasterContainer>\r\n        );\r\n    } else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\APIS\\MovieAPI.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\promise.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\Table.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\Promise.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Page\\style\\home-style.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\Modal.js",[],"C:\\Users\\Fakhri\\go\\src\\github.com\\fakhripraya\\test\\test-app\\src\\Components\\style\\table-style.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":30,"column":12,"nodeType":"61","messageId":"62","endLine":30,"endColumn":27},{"ruleId":"59","severity":1,"message":"63","line":30,"column":29,"nodeType":"61","messageId":"62","endLine":30,"endColumn":47},{"ruleId":"59","severity":1,"message":"64","line":31,"column":12,"nodeType":"61","messageId":"62","endLine":31,"endColumn":33},{"ruleId":"59","severity":1,"message":"65","line":31,"column":35,"nodeType":"61","messageId":"62","endLine":31,"endColumn":59},{"ruleId":"59","severity":1,"message":"66","line":35,"column":29,"nodeType":"61","messageId":"62","endLine":35,"endColumn":47},{"ruleId":"67","severity":1,"message":"68","line":61,"column":8,"nodeType":"69","endLine":61,"endColumn":20,"suggestions":"70"},{"ruleId":"55","replacedBy":"71"},{"ruleId":"57","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'autoDisplayLike' is assigned a value but never used.","Identifier","unusedVar","'setAutoDisplayLike' is assigned a value but never used.","'autoDisplayLikeRender' is assigned a value but never used.","'setAutoDisplayLikeRender' is assigned a value but never used.","'setqueryLikeToggle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'MovieDatas.length'. Either include it or remove the dependency array.","ArrayExpression",["75"],["73"],["74"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [MovieDatas.length, queryTitle]",{"range":"78","text":"79"},[2064,2076],"[MovieDatas.length, queryTitle]"]